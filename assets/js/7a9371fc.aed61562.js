"use strict";(self.webpackChunkreadmes=self.webpackChunkreadmes||[]).push([[8170],{6322:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Backend/ReCaptcha","title":"Google reCAPTCHA v3 - Complete Implementation Guide","description":"Step-by-step guide to implementing Google reCAPTCHA v3 in React frontend and Express backend for bot protection and security.","source":"@site/docs/Backend/ReCaptcha.md","sourceDirName":"Backend","slug":"/Backend/ReCaptcha","permalink":"/readmes/docs/Backend/ReCaptcha","draft":false,"unlisted":false,"editUrl":"https://github.com/Sandeep-Petwal/readmes/tree/main/packages/create-docusaurus/templates/shared/docs/Backend/ReCaptcha.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"ReCaptcha","title":"Google reCAPTCHA v3 - Complete Implementation Guide","description":"Step-by-step guide to implementing Google reCAPTCHA v3 in React frontend and Express backend for bot protection and security."},"sidebar":"tutorialSidebar","previous":{"title":"Backend Technologies","permalink":"/readmes/docs/category/backend-technologies"},"next":{"title":"Google Auth","permalink":"/readmes/docs/Backend/googleAuth"}}');var o=r(4848),a=r(8453);const s={sidebar_label:"ReCaptcha",title:"Google reCAPTCHA v3 - Complete Implementation Guide",description:"Step-by-step guide to implementing Google reCAPTCHA v3 in React frontend and Express backend for bot protection and security."},c="Google reCAPTCHA v3 - Complete Implementation Guide",i={},l=[{value:"Step 1: Get reCAPTCHA Keys",id:"step-1-get-recaptcha-keys",level:2},{value:"Step 2: Frontend Implementation (React)",id:"step-2-frontend-implementation-react",level:2},{value:"Step 3. Use the <code>useGoogleReCaptcha</code> hook in your component:",id:"step-3-use-the-usegooglerecaptcha-hook-in-your-component",level:2},{value:"Step 3: Backend Implementation (Express)",id:"step-3-backend-implementation-express",level:2},{value:"1. Middleware",id:"1-middleware",level:3},{value:"Use middleware in your routes",id:"use-middleware-in-your-routes",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"google-recaptcha-v3---complete-implementation-guide",children:"Google reCAPTCHA v3 - Complete Implementation Guide"})}),"\n",(0,o.jsx)(n.p,{children:"A comprehensive guide to implementing Google reCAPTCHA v3 in React and Express applications for enhanced security and bot protection."}),"\n",(0,o.jsx)(n.h2,{id:"step-1-get-recaptcha-keys",children:"Step 1: Get reCAPTCHA Keys"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Go to the ",(0,o.jsx)(n.a,{href:"https://www.google.com/recaptcha/admin",children:"Google reCAPTCHA Admin Console"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"Register a new site."}),"\n",(0,o.jsx)(n.li,{children:"Select reCAPTCHA v3."}),"\n",(0,o.jsx)(n.li,{children:"Add your domains."}),"\n",(0,o.jsxs)(n.li,{children:["You'll receive:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Site Key"})," (for frontend)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Secret Key"})," (for backend)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"step-2-frontend-implementation-react",children:"Step 2: Frontend Implementation (React)"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Install the package:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install react-google-recaptcha-v3\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Wrap your app with the provider in App.js:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { GoogleReCaptchaProvider } from "react-google-recaptcha-v3";\r\n\r\nfunction App() {\r\n  return (\r\n    <GoogleReCaptchaProvider reCaptchaKey="YOUR_SITE_KEY">\r\n      {/* Your app components */}\r\n    </GoogleReCaptchaProvider>\r\n  );\r\n}\n'})}),"\n",(0,o.jsxs)(n.h2,{id:"step-3-use-the-usegooglerecaptcha-hook-in-your-component",children:["Step 3. Use the ",(0,o.jsx)(n.code,{children:"useGoogleReCaptcha"})," hook in your component:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"\r\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3';\r\nimport { useState } from 'react';\r\n\r\nfunction LoginForm() {\r\n  const { executeRecaptcha } = useGoogleReCaptcha();\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!executeRecaptcha) {\r\n      console.log('Execute recaptcha not yet available');\r\n      return;\r\n    }\r\n\r\n    // Get reCAPTCHA token\r\n    const token = await executeRecaptcha('login');\r\n\r\n    try {\r\n      const response = await fetch('your-api-endpoint/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          recaptchaToken: token\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      // Handle response\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Your form fields */}\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n}\r\n\r\n\n"})}),"\n",(0,o.jsx)(n.h2,{id:"step-3-backend-implementation-express",children:"Step 3: Backend Implementation (Express)"}),"\n",(0,o.jsx)(n.h3,{id:"1-middleware",children:"1. Middleware"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// middleware/recaptcha.js\r\nconst axios = require('axios');\r\n\r\nconst verifyRecaptcha = async (req, res, next) => {\r\n  const { recaptchaToken } = req.body;\r\n\r\n  if (!recaptchaToken) {\r\n    return res.status(400).json({ error: 'reCAPTCHA token is required' });\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `https://www.google.com/recaptcha/api/siteverify?secret=${process.env.RECAPTCHA_SECRET_KEY}&response=${recaptchaToken}`\r\n    );\r\n\r\n    const { success, score } = response.data;\r\n\r\n    if (!success || score < 0.5) {\r\n      return res.status(400).json({ error: 'reCAPTCHA verification failed' });\r\n    }\r\n\r\n    next();\r\n  } catch (error) {\r\n    console.error('reCAPTCHA verification error:', error);\r\n    return res.status(500).json({ error: 'reCAPTCHA verification failed' });\r\n  }\r\n};\r\n\r\nmodule.exports = verifyRecaptcha;\n"})}),"\n",(0,o.jsx)(n.h3,{id:"use-middleware-in-your-routes",children:"Use middleware in your routes"})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var t=r(6540);const o={},a=t.createContext(o);function s(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);