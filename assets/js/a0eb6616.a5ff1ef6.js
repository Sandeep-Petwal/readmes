"use strict";(self.webpackChunkreadmes=self.webpackChunkreadmes||[]).push([[4504],{643:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Git","title":"Git - Version Control Guide","description":"Complete guide to Git version control system including basic commands, workflows, and best practices for collaborative development.","source":"@site/docs/Git.md","sourceDirName":".","slug":"/Git","permalink":"/readmes/docs/Git","draft":false,"unlisted":false,"editUrl":"https://github.com/Sandeep-Petwal/readmes/tree/main/packages/create-docusaurus/templates/shared/docs/Git.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Git","title":"Git - Version Control Guide","description":"Complete guide to Git version control system including basic commands, workflows, and best practices for collaborative development."},"sidebar":"tutorialSidebar","previous":{"title":"Docker","permalink":"/readmes/docs/Docker"},"next":{"title":"Microservices","permalink":"/readmes/docs/Microservice-architecture"}}');var t=r(4848),s=r(8453);const o={sidebar_label:"Git",title:"Git - Version Control Guide",description:"Complete guide to Git version control system including basic commands, workflows, and best practices for collaborative development."},a="Git - Version Control Guide",l={},c=[{value:"Git Configuration",id:"git-configuration",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Multiple GitHub Accounts Setup",id:"multiple-github-accounts-setup",level:2},{value:"1. Set Local Git User for the Repo",id:"1-set-local-git-user-for-the-repo",level:3},{value:"2. SSH Key Setup",id:"2-ssh-key-setup",level:3},{value:"a. Generate SSH Key for Other Account",id:"a-generate-ssh-key-for-other-account",level:4},{value:"b. Add SSH Key to GitHub",id:"b-add-ssh-key-to-github",level:4},{value:"c. Modify SSH Config",id:"c-modify-ssh-config",level:4},{value:"3. Clone or Update Remote URL to Use Custom Host",id:"3-clone-or-update-remote-url-to-use-custom-host",level:3},{value:"Contributing to Open Source Projects",id:"contributing-to-open-source-projects",level:2},{value:"How to Contribute to an Open Source Project",id:"how-to-contribute-to-an-open-source-project",level:3},{value:"A. Fork &amp; Clone",id:"a-fork--clone",level:4},{value:"B. Create a new branch",id:"b-create-a-new-branch",level:4},{value:"C. Make your changes and commit",id:"c-make-your-changes-and-commit",level:4},{value:"D. Push to your fork",id:"d-push-to-your-fork",level:4},{value:"E. Create a Pull Request",id:"e-create-a-pull-request",level:4},{value:"Git Pull Strategies",id:"git-pull-strategies",level:2},{value:"--rebase vs --no-rebase when doing a Git pull",id:"--rebase-vs---no-rebase-when-doing-a-git-pull",level:3},{value:"Git Commands Reference",id:"git-commands-reference",level:2},{value:"Basic Commands",id:"basic-commands",level:3},{value:"Branching Commands",id:"branching-commands",level:3},{value:"Push and Pull Commands",id:"push-and-pull-commands",level:3},{value:"Merge &amp; Rebase Commands",id:"merge--rebase-commands",level:3},{value:"Undo/Fixes Commands",id:"undofixes-commands",level:3},{value:"Stash Commands",id:"stash-commands",level:3},{value:"Diff Commands",id:"diff-commands",level:3},{value:"Remote Commands",id:"remote-commands",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"git---version-control-guide",children:"Git - Version Control Guide"})}),"\n",(0,t.jsx)(n.p,{children:"A comprehensive guide to Git version control system for managing code repositories and collaborative development."}),"\n",(0,t.jsx)(n.h2,{id:"git-configuration",children:"Git Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Config\r\ngit config --global user.name "Your Name"\r\ngit config --global user.email "you@example.com"\r\ngit config --global core.editor "code"  # for VS Code\r\ngit config --global init.defaultBranch main\n'})}),"\n",(0,t.jsx)(n.h2,{id:"multiple-github-accounts-setup",children:"Multiple GitHub Accounts Setup"}),"\n",(0,t.jsx)(n.h3,{id:"1-set-local-git-user-for-the-repo",children:"1. Set Local Git User for the Repo"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'cd path/to/your/project\r\ngit config user.name "Other User\'s Name"\r\ngit config user.email "otheruser@example.com"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-ssh-key-setup",children:"2. SSH Key Setup"}),"\n",(0,t.jsx)(n.h4,{id:"a-generate-ssh-key-for-other-account",children:"a. Generate SSH Key for Other Account"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# You need to associate a different SSH key with the other GitHub account.\r\n# Choose a name like id_ed25519_otherUser so you don\'t overwrite your main one\r\n# Ed25519 and RSA are both cryptographic algorithms used for generating key pairs for secure communication \r\n# we can use rsa instead of ed25519\r\nssh-keygen -t ed25519 -C "otheruser@example.com" -f ~/.ssh/id_ed25519_otherUser\n'})}),"\n",(0,t.jsx)(n.h4,{id:"b-add-ssh-key-to-github",children:"b. Add SSH Key to GitHub"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Copy key (.pub file)\r\ncat ~/.ssh/id_ed25519_otherUser.pub\n"})}),"\n",(0,t.jsx)(n.p,{children:'Go to Other GitHub Account \u2192 Settings \u2192 SSH and GPG keys \u2192 New SSH key\r\nPaste it and give it a name like "Other Laptop Key"'}),"\n",(0,t.jsx)(n.h4,{id:"c-modify-ssh-config",children:"c. Modify SSH Config"}),"\n",(0,t.jsx)(n.p,{children:"Edit or create your SSH config file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"nano ~/.ssh/config\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add this configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Main GitHub account (default)\r\nHost github.com\r\n  HostName github.com\r\n  User git\r\n  IdentityFile ~/.ssh/id_ed25519\r\n\r\n# Other GitHub account\r\nHost github-other\r\n  HostName github.com\r\n  User git\r\n  IdentityFile ~/.ssh/id_ed25519_otherUser\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-clone-or-update-remote-url-to-use-custom-host",children:"3. Clone or Update Remote URL to Use Custom Host"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# If you're cloning:\r\ngit clone git@github-other:username/repo.git\r\n\r\n# Or if the repo is already cloned, update the remote:\r\ngit remote set-url origin git@github-other:username/repo.git\n"})}),"\n",(0,t.jsx)(n.h2,{id:"contributing-to-open-source-projects",children:"Contributing to Open Source Projects"}),"\n",(0,t.jsx)(n.h3,{id:"how-to-contribute-to-an-open-source-project",children:"How to Contribute to an Open Source Project"}),"\n",(0,t.jsx)(n.h4,{id:"a-fork--clone",children:"A. Fork & Clone"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/your-username/repo-name.git\n"})}),"\n",(0,t.jsx)(n.h4,{id:"b-create-a-new-branch",children:"B. Create a new branch"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git checkout -b fix-issue-123\n"})}),"\n",(0,t.jsx)(n.h4,{id:"c-make-your-changes-and-commit",children:"C. Make your changes and commit"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git add .\r\ngit commit -m "Fix: issue #123 - corrected form validation"\n'})}),"\n",(0,t.jsx)(n.h4,{id:"d-push-to-your-fork",children:"D. Push to your fork"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git push origin fix-issue-123\n"})}),"\n",(0,t.jsx)(n.h4,{id:"e-create-a-pull-request",children:"E. Create a Pull Request"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Go to your fork on GitHub"}),"\n",(0,t.jsx)(n.li,{children:'Click "Compare & pull request"'}),"\n",(0,t.jsx)(n.li,{children:"Write a clear title & description (link to the issue if possible)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u2705 Done! Maintainers will review it."}),"\n",(0,t.jsx)(n.h2,{id:"git-pull-strategies",children:"Git Pull Strategies"}),"\n",(0,t.jsx)(n.h3,{id:"--rebase-vs---no-rebase-when-doing-a-git-pull",children:"--rebase vs --no-rebase when doing a Git pull"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# git pull under the hood:\r\ngit pull = git fetch + git merge (by default)\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"--rebase"}),": It fetches the latest changes from the remote, then replays your local commits on top of them \u2014 this creates a linear commit history (cleaner!)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"--no-rebase (default)"}),": Just merges the remote changes into your current branch. This can create merge commits and a more complex history."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"TL;DR:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"--rebase"})," if you want a clean linear history."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"--no-rebase"})," if you prefer to keep explicit merge commits."]}),"\n",(0,t.jsxs)(n.li,{children:["We can set rebase by default with: ",(0,t.jsx)(n.code,{children:"git config --global pull.rebase true"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"git-commands-reference",children:"Git Commands Reference"}),"\n",(0,t.jsx)(n.h3,{id:"basic-commands",children:"Basic Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# View commit log\r\ngit log\r\n\r\n# View single-line log\r\ngit log --oneline\n"})}),"\n",(0,t.jsx)(n.h3,{id:"branching-commands",children:"Branching Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create branch\r\ngit branch <branch-name>\r\n\r\n# Switch branch\r\ngit checkout <branch-name>\r\n\r\n# Create + switch\r\ngit checkout -b <branch-name>\r\n\r\n# Delete branch\r\ngit branch -d <branch-name>\r\n\r\n# Rename branch\r\ngit branch -m <new-name>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"push-and-pull-commands",children:"Push and Pull Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Add remote\r\ngit remote add origin <url>\r\n\r\n# Push branch\r\ngit push origin <branch-name>\r\n\r\n# Push all\r\ngit push --all\r\n\r\n# Pull latest changes\r\ngit pull\r\n\r\n# Pull specific branch\r\ngit pull origin <branch-name>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"merge--rebase-commands",children:"Merge & Rebase Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Merge branch into current\r\ngit merge <branch-name>\r\n\r\n# Rebase onto branch\r\ngit rebase <branch-name>\r\n\r\n# Abort rebase\r\ngit rebase --abort\r\n\r\n# Continue rebase\r\ngit rebase --continue\n"})}),"\n",(0,t.jsx)(n.h3,{id:"undofixes-commands",children:"Undo/Fixes Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Unstage file\r\ngit reset <file>\r\n\r\n# Unstage everything\r\ngit reset\r\n\r\n# Undo last commit (keep changes)\r\ngit reset --soft HEAD~1\r\n\r\n# Undo last commit (discard changes)\r\ngit reset --hard HEAD~1\r\n\r\n# Remove file from repo\r\ngit rm <file>\r\n\r\n# Amend last commit\r\ngit commit --amend\n"})}),"\n",(0,t.jsx)(n.h3,{id:"stash-commands",children:"Stash Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Stash changes\r\ngit stash\r\n\r\n# List stashes\r\ngit stash list\r\n\r\n# Apply stash\r\ngit stash apply\r\n\r\n# Apply and delete\r\ngit stash pop\n"})}),"\n",(0,t.jsx)(n.h3,{id:"diff-commands",children:"Diff Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Show changes\r\ngit diff\r\n\r\n# Show staged changes\r\ngit diff --cached\r\n\r\n# Show specific commit\r\ngit show <commit>\r\n\r\n# Compare branches\r\ngit diff branch1..branch2\n"})}),"\n",(0,t.jsx)(n.h3,{id:"remote-commands",children:"Remote Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# List remotes\r\ngit remote -v\r\n\r\n# Rename remote\r\ngit remote rename origin upstream\r\n\r\n# Remove remote\r\ngit remote remove <name>\r\n\r\n# Fetch all branches\r\ngit fetch --all\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var i=r(6540);const t={},s=i.createContext(t);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);