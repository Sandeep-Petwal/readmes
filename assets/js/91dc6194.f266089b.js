"use strict";(self.webpackChunkreadmes=self.webpackChunkreadmes||[]).push([[7498],{4708:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Frontend/socket.io","title":"Socket.io Client - Frontend Implementation Guide","description":"Complete guide to implementing Socket.io client in React with JWT authentication, custom hooks, and real-time communication.","source":"@site/docs/Frontend/socket.io.md","sourceDirName":"Frontend","slug":"/Frontend/socket.io","permalink":"/docs/Frontend/socket.io","draft":false,"unlisted":false,"editUrl":"https://github.com/Sandeep-Petwal/readmes/tree/main/packages/create-docusaurus/templates/shared/docs/Frontend/socket.io.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Frontend Socket.io","title":"Socket.io Client - Frontend Implementation Guide","description":"Complete guide to implementing Socket.io client in React with JWT authentication, custom hooks, and real-time communication."},"sidebar":"tutorialSidebar","previous":{"title":"Redux Connect","permalink":"/docs/Frontend/Redux_Connect"},"next":{"title":"Backend Technologies","permalink":"/docs/category/backend-technologies"}}');var r=t(4848),o=t(8453);const c={sidebar_label:"Frontend Socket.io",title:"Socket.io Client - Frontend Implementation Guide",description:"Complete guide to implementing Socket.io client in React with JWT authentication, custom hooks, and real-time communication."},i="Socket.io Client - Frontend Implementation Guide",a={},l=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Client-Side Implementation",id:"client-side-implementation",level:2},{value:"Step 1: Create Socket Hook",id:"step-1-create-socket-hook",level:3},{value:"Step 2: Use Socket in Components",id:"step-2-use-socket-in-components",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Events",id:"custom-events",level:3},{value:"Room Management",id:"room-management",level:3},{value:"Reconnection Logic",id:"reconnection-logic",level:3},{value:"Complete Example",id:"complete-example",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"socketio-client---frontend-implementation-guide",children:"Socket.io Client - Frontend Implementation Guide"})}),"\n",(0,r.jsx)(n.p,{children:"A comprehensive guide to implementing Socket.io client in React applications with JWT authentication and real-time communication features."}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#prerequisites",children:"Prerequisites"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#client-side-implementation",children:"Client-Side Implementation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#usage-examples",children:"Usage Examples"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#best-practices",children:"Best Practices"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Client dependencies\r\nnpm install socket.io-client\n"})}),"\n",(0,r.jsx)(n.h2,{id:"client-side-implementation",children:"Client-Side Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-create-socket-hook",children:"Step 1: Create Socket Hook"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import { io } from 'socket.io-client';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useSocket = (token) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    const socketInstance = io('http://localhost:3001', {\r\n      auth: { token }\r\n    });\r\n\r\n    socketInstance.on('connect', () => {\r\n      setIsConnected(true);\r\n    });\r\n\r\n    setSocket(socketInstance);\r\n\r\n    return () => socketInstance.disconnect();\r\n  }, [token]);\r\n\r\n  return { socket, isConnected };\r\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-use-socket-in-components",children:"Step 2: Use Socket in Components"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const ChatComponent = () => {\r\n  const token = 'your-jwt-token'; // Get from auth system\r\n  const { socket, isConnected } = useSocket(token);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    socket.on('message', (data) => {\r\n      console.log('Received:', data);\r\n    });\r\n\r\n    return () => socket.off('message');\r\n  }, [socket]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Status: {isConnected ? 'Connected' : 'Disconnected'}</p>\r\n    </div>\r\n  );\r\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Security"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement token expiration and renewal"}),"\n",(0,r.jsx)(n.li,{children:"Use HTTPS in production"}),"\n",(0,r.jsx)(n.li,{children:"Validate token payload"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement reconnection logic"}),"\n",(0,r.jsx)(n.li,{children:"Handle connection errors gracefully"}),"\n",(0,r.jsx)(n.li,{children:"Log security-related events"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Clean up event listeners"}),"\n",(0,r.jsx)(n.li,{children:"Handle disconnections properly"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Connection Issues"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Handle connection errors\r\nsocket.on('connect_error', (error) => {\r\n  console.error('Connection failed:', error.message);\r\n  // Implement retry logic\r\n});\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Token Expiration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Check token expiration before emitting events\r\nconst isTokenValid = () => {\r\n  const token = socket.auth.token;\r\n  try {\r\n    jwt.verify(token, JWT_SECRET);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,r.jsx)(n.h3,{id:"custom-events",children:"Custom Events"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Client-side\r\nsocket.on('notification', (data) => {\r\n  showNotification(data.message);\r\n});\r\n\r\n// Emit events\r\nsocket.emit('sendMessage', {\r\n  message: 'Hello World',\r\n  room: 'general'\r\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"room-management",children:"Room Management"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Join a room\r\nsocket.emit('joinRoom', 'roomId');\r\n\r\n// Listen for room events\r\nsocket.on('roomJoined', (roomId) => {\r\n  console.log(`Joined room: ${roomId}`);\r\n});\r\n\r\nsocket.on('userJoined', (user) => {\r\n  console.log(`${user.name} joined the room`);\r\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"reconnection-logic",children:"Reconnection Logic"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const useSocketWithReconnect = (token) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [reconnectAttempts, setReconnectAttempts] = useState(0);\r\n  const maxReconnectAttempts = 5;\r\n\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    const socketInstance = io('http://localhost:3001', {\r\n      auth: { token },\r\n      reconnection: true,\r\n      reconnectionAttempts: maxReconnectAttempts,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    socketInstance.on('connect', () => {\r\n      setIsConnected(true);\r\n      setReconnectAttempts(0);\r\n    });\r\n\r\n    socketInstance.on('disconnect', () => {\r\n      setIsConnected(false);\r\n    });\r\n\r\n    socketInstance.on('reconnect_attempt', (attemptNumber) => {\r\n      setReconnectAttempts(attemptNumber);\r\n      if (attemptNumber > maxReconnectAttempts) {\r\n        console.error('Max reconnection attempts reached');\r\n      }\r\n    });\r\n\r\n    setSocket(socketInstance);\r\n\r\n    return () => socketInstance.disconnect();\r\n  }, [token]);\r\n\r\n  return { socket, isConnected, reconnectAttempts };\r\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import React, { useState, useEffect } from 'react';\r\nimport { useSocket } from './hooks/useSocket';\r\n\r\nconst ChatApp = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const token = localStorage.getItem('authToken');\r\n  const { socket, isConnected } = useSocket(token);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    // Listen for incoming messages\r\n    socket.on('message', (newMessage) => {\r\n      setMessages(prev => [...prev, newMessage]);\r\n    });\r\n\r\n    // Listen for user join/leave events\r\n    socket.on('userJoined', (user) => {\r\n      setMessages(prev => [...prev, {\r\n        type: 'system',\r\n        content: `${user.name} joined the chat`\r\n      }]);\r\n    });\r\n\r\n    socket.on('userLeft', (user) => {\r\n      setMessages(prev => [...prev, {\r\n        type: 'system',\r\n        content: `${user.name} left the chat`\r\n      }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('message');\r\n      socket.off('userJoined');\r\n      socket.off('userLeft');\r\n    };\r\n  }, [socket]);\r\n\r\n  const sendMessage = () => {\r\n    if (!inputMessage.trim() || !socket) return;\r\n\r\n    socket.emit('sendMessage', {\r\n      content: inputMessage,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n    setInputMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-app\">\r\n      <div className=\"connection-status\">\r\n        Status: {isConnected ? '\ud83d\udfe2 Connected' : '\ud83d\udd34 Disconnected'}\r\n      </div>\r\n      \r\n      <div className=\"messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.type}`}>\r\n            {message.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n          placeholder=\"Type a message...\"\r\n          disabled={!isConnected}\r\n        />\r\n        <button onClick={sendMessage} disabled={!isConnected}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var s=t(6540);const r={},o=s.createContext(r);function c(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);