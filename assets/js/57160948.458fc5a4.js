"use strict";(self.webpackChunkreadmes=self.webpackChunkreadmes||[]).push([[7607],{7317:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Frontend/redux-toolkit","title":"Redux Toolkit - Complete Implementation Guide","description":"Step-by-step guide to implementing Redux with Redux Toolkit, including store setup, slices, async actions, and best practices.","source":"@site/docs/Frontend/4.redux-toolkit.md","sourceDirName":"Frontend","slug":"/Frontend/redux-toolkit","permalink":"/readmes/docs/Frontend/redux-toolkit","draft":false,"unlisted":false,"editUrl":"https://github.com/Sandeep-Petwal/readmes/tree/main/packages/create-docusaurus/templates/shared/docs/Frontend/4.redux-toolkit.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"Redux Toolkit","title":"Redux Toolkit - Complete Implementation Guide","description":"Step-by-step guide to implementing Redux with Redux Toolkit, including store setup, slices, async actions, and best practices."},"sidebar":"tutorialSidebar","previous":{"title":"Context API","permalink":"/readmes/docs/Frontend/context-api"},"next":{"title":"React Hook Form","permalink":"/readmes/docs/Frontend/react-hook-form"}}');var i=t(4848),s=t(8453);const l={sidebar_label:"Redux Toolkit",title:"Redux Toolkit - Complete Implementation Guide",description:"Step-by-step guide to implementing Redux with Redux Toolkit, including store setup, slices, async actions, and best practices."},o="Redux Toolkit - Complete Implementation Guide",a={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Installation",id:"installation",level:2},{value:"Implementation Steps",id:"implementation-steps",level:2},{value:"1. Create and Configure Store",id:"1-create-and-configure-store",level:3},{value:"2. Create Redux Slice",id:"2-create-redux-slice",level:3},{value:"3. Provide Store to React App",id:"3-provide-store-to-react-app",level:3},{value:"4. Use Redux in Components",id:"4-use-redux-in-components",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Common Patterns",id:"common-patterns",level:2},{value:"Async Actions with createAsyncThunk",id:"async-actions-with-createasyncthunk",level:3},{value:"Custom Middleware",id:"custom-middleware",level:3},{value:"Debugging",id:"debugging",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"redux-toolkit---complete-implementation-guide",children:"Redux Toolkit - Complete Implementation Guide"})}),"\n",(0,i.jsx)(n.p,{children:"A comprehensive guide to implementing Redux with Redux Toolkit in a React application with modern patterns and best practices."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://redux-toolkit.js.org/tutorials/quick-start",children:"Docs"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#implementation-steps",children:"Implementation Steps"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#usage-examples",children:"Usage Examples"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#best-practices",children:"Best Practices"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Using npm\r\nnpm install @reduxjs/toolkit react-redux\r\n\r\n# Using yarn\r\nyarn add @reduxjs/toolkit react-redux\n"})}),"\n",(0,i.jsx)(n.h2,{id:"implementation-steps",children:"Implementation Steps"}),"\n",(0,i.jsx)(n.h3,{id:"1-create-and-configure-store",children:"1. Create and Configure Store"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// src/store/store.js\r\nimport { configureStore } from "@reduxjs/toolkit";\r\nimport listReducer from "./slices/listSlice";\r\nimport userReducer from "./slices/userSlice";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // Single reducer\r\n    lists: listReducer,\r\n    \r\n    // Multiple reducers\r\n    lists: listReducer,\r\n    user: userReducer,\r\n  },\r\n  // Optional: Configure middleware\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(customMiddleware),\r\n});\r\n\r\nexport default store;\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-create-redux-slice",children:"2. Create Redux Slice"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// src/store/slices/listSlice.js\r\nimport { createSlice, nanoid } from "@reduxjs/toolkit";\r\n\r\nconst initialState = {\r\n  lists: [\r\n    { id: nanoid(), text: "Example item 1" },\r\n    { id: nanoid(), text: "Example item 2" },\r\n  ],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const listSlice = createSlice({\r\n  name: "list",\r\n  initialState,\r\n  reducers: {\r\n    // Add item\r\n    addList: (state, action) => {\r\n      state.lists.push({\r\n        id: nanoid(),\r\n        text: action.payload.text,\r\n      });\r\n    },\r\n    // Delete item\r\n    deleteList: (state, action) => {\r\n      state.lists = state.lists.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n    },\r\n    // Update item\r\n    updateList: (state, action) => {\r\n      const { id, text } = action.payload;\r\n      const existingList = state.lists.find(list => list.id === id);\r\n      if (existingList) {\r\n        existingList.text = text;\r\n      }\r\n    },\r\n  },\r\n  // Optional: Handle async actions\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchLists.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchLists.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.lists = action.payload;\r\n      })\r\n      .addCase(fetchLists.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\n// Export actions\r\nexport const { addList, deleteList, updateList } = listSlice.actions;\r\n\r\n// Export reducer\r\nexport default listSlice.reducer;\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-provide-store-to-react-app",children:"3. Provide Store to React App"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// src/main.jsx or src/index.jsx\r\nimport React from "react";\r\nimport ReactDOM from "react-dom/client";\r\nimport { Provider } from "react-redux";\r\nimport store from "./store/store";\r\nimport App from "./App";\r\n\r\nReactDOM.createRoot(document.getElementById("root")).render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-use-redux-in-components",children:"4. Use Redux in Components"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// src/components/ListManager.jsx\r\nimport React, { useState } from "react";\r\nimport { useDispatch, useSelector } from "react-redux";\r\nimport { addList, deleteList, updateList } from "../store/slices/listSlice";\r\n\r\nfunction ListManager() {\r\n  const [input, setInput] = useState("");\r\n  const dispatch = useDispatch();\r\n  \r\n  // Select data from store\r\n  const { lists, loading, error } = useSelector((state) => state.lists);\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    \r\n    dispatch(addList({ text: input }));\r\n    setInput("");\r\n  };\r\n  \r\n  // Handle item deletion\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteList({ id }));\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder="Add new item"\r\n        />\r\n        <button type="submit">Add</button>\r\n      </form>\r\n\r\n      <ul>\r\n        {lists.map((item) => (\r\n          <li key={item.id}>\r\n            {item.text}\r\n            <button onClick={() => handleDelete(item.id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListManager;\n'})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"State Structure"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Keep state normalized"}),"\n",(0,i.jsx)(n.li,{children:"Avoid deeply nested state"}),"\n",(0,i.jsxs)(n.li,{children:["Use RTK's ",(0,i.jsx)(n.code,{children:"createEntityAdapter"})," for collections"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Actions and Reducers"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use meaningful action names"}),"\n",(0,i.jsx)(n.li,{children:"Keep reducers pure"}),"\n",(0,i.jsxs)(n.li,{children:["Utilize RTK's ",(0,i.jsx)(n.code,{children:"createSlice"})," for reducer logic"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Selectors"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Memoize complex selectors with ",(0,i.jsx)(n.code,{children:"createSelector"})]}),"\n",(0,i.jsx)(n.li,{children:"Keep selectors close to reducers"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"export const selectFilteredLists = createSelector(\r\n  [(state) => state.lists.lists, (state) => state.lists.filter],\r\n  (lists, filter) => lists.filter(list => list.text.includes(filter))\r\n);\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Performance"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use specific selectors to prevent unnecessary re-renders"}),"\n",(0,i.jsx)(n.li,{children:"Implement proper memoization"}),"\n",(0,i.jsx)(n.li,{children:"Split reducers for different domains"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"async-actions-with-createasyncthunk",children:"Async Actions with createAsyncThunk"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { createAsyncThunk } from "@reduxjs/toolkit";\r\n\r\nexport const fetchLists = createAsyncThunk(\r\n  "lists/fetchLists",\r\n  async () => {\r\n    const response = await fetch("/api/lists");\r\n    return response.json();\r\n  }\r\n);\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-middleware",children:"Custom Middleware"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'const loggingMiddleware = (store) => (next) => (action) => {\r\n  console.log("Dispatching:", action);\r\n  const result = next(action);\r\n  console.log("New State:", store.getState());\r\n  return result;\r\n};\n'})}),"\n",(0,i.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Install Redux DevTools Extension"}),"\n",(0,i.jsx)(n.li,{children:"Enable DevTools in store configuration:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function l(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);