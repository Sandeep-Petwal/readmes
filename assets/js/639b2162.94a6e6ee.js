"use strict";(self.webpackChunkreadmes=self.webpackChunkreadmes||[]).push([[1564],{306:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Backend/googleAuth","title":"Google OAuth Authentication - Complete Guide","description":"Step-by-step guide to implementing Google OAuth authentication in React frontend and Node.js backend with JWT token handling.","source":"@site/docs/Backend/googleAuth.md","sourceDirName":"Backend","slug":"/Backend/googleAuth","permalink":"/docs/Backend/googleAuth","draft":false,"unlisted":false,"editUrl":"https://github.com/Sandeep-Petwal/readmes/tree/main/packages/create-docusaurus/templates/shared/docs/Backend/googleAuth.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Google Auth","title":"Google OAuth Authentication - Complete Guide","description":"Step-by-step guide to implementing Google OAuth authentication in React frontend and Node.js backend with JWT token handling."},"sidebar":"tutorialSidebar","previous":{"title":"ReCaptcha","permalink":"/docs/Backend/ReCaptcha"},"next":{"title":"Socket.io","permalink":"/docs/Backend/socket.io"}}');var o=t(4848),s=t(8453);const i={sidebar_label:"Google Auth",title:"Google OAuth Authentication - Complete Guide",description:"Step-by-step guide to implementing Google OAuth authentication in React frontend and Node.js backend with JWT token handling."},l="Google OAuth Authentication - Complete Guide",a={},c=[{value:"Frontend Steps",id:"frontend-steps",level:2},{value:"Step 1: Install Dependencies",id:"step-1-install-dependencies",level:3},{value:"Step 2: Setup OAuth Provider",id:"step-2-setup-oauth-provider",level:3},{value:"Step 3: Implement Login Button",id:"step-3-implement-login-button",level:3},{value:"Step 4: Use Login Button",id:"step-4-use-login-button",level:3},{value:"Backend Steps",id:"backend-steps",level:2},{value:"Step 1: Install Google Auth Library",id:"step-1-install-google-auth-library",level:3},{value:"Step 2: Create a Route",id:"step-2-create-a-route",level:3},{value:"Step 3: Implement Authentication Controller",id:"step-3-implement-authentication-controller",level:3},{value:"How It Works: Overview",id:"how-it-works-overview",level:2},{value:"Key Terms and Their Roles",id:"key-terms-and-their-roles",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"google-oauth-authentication---complete-guide",children:"Google OAuth Authentication - Complete Guide"})}),"\n",(0,o.jsx)(n.p,{children:"A comprehensive guide to implementing Google OAuth authentication in React frontend and Node.js backend applications."}),"\n",(0,o.jsx)(n.h2,{id:"frontend-steps",children:"Frontend Steps"}),"\n",(0,o.jsx)(n.h3,{id:"step-1-install-dependencies",children:"Step 1: Install Dependencies"}),"\n",(0,o.jsx)(n.p,{children:"Install the Google authentication library:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm i @react-oauth/google\n"})}),"\n",(0,o.jsx)(n.h3,{id:"step-2-setup-oauth-provider",children:"Step 2: Setup OAuth Provider"}),"\n",(0,o.jsx)(n.p,{children:"Wrap your app with the GoogleOAuthProvider:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { GoogleOAuthProvider } from "@react-oauth/google";\r\n\r\n<GoogleOAuthProvider clientId="YOUR_GOOGLE_CLIENT_ID">\r\n  <App />\r\n</GoogleOAuthProvider>;\n'})}),"\n",(0,o.jsx)(n.h3,{id:"step-3-implement-login-button",children:"Step 3: Implement Login Button"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { GoogleLogin } from "@react-oauth/google";\r\n\r\nconst SERVER_URL = import.meta.env.VITE_SERVER_URL;\r\n\r\nconst GoogleLoginButton = () => {\r\n  const handleSuccess = async (response) => {\r\n    const idToken = response.credential;\r\n    try {\r\n      const res = await fetch(`${SERVER_URL}/api/user/auth/google`, {\r\n        method: "POST",\r\n        headers: { "Content-Type": "application/json" },\r\n        body: JSON.stringify({ idToken }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        // login the user\r\n        localStorage.setItem("token", data.token);\r\n      } else {\r\n        console.error(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error("Error during fetch:", error);\r\n    }\r\n  };\r\n\r\n  const handleError = (error) => {\r\n    console.error("Login Failed:", error);\r\n  };\r\n\r\n  return <GoogleLogin onSuccess={handleSuccess} onError={handleError} />;\r\n};\r\n\r\nexport default GoogleLoginButton;\n'})}),"\n",(0,o.jsx)(n.h3,{id:"step-4-use-login-button",children:"Step 4: Use Login Button"}),"\n",(0,o.jsx)(n.p,{children:"Implement the GoogleLoginButton component where you want to show the login button in your application."}),"\n",(0,o.jsx)(n.h2,{id:"backend-steps",children:"Backend Steps"}),"\n",(0,o.jsx)(n.h3,{id:"step-1-install-google-auth-library",children:"Step 1: Install Google Auth Library"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm i google-auth-library\n"})}),"\n",(0,o.jsx)(n.h3,{id:"step-2-create-a-route",children:"Step 2: Create a Route"}),"\n",(0,o.jsxs)(n.p,{children:["Create a route for Google authentication: ",(0,o.jsx)(n.code,{children:"api/auth/google"})]}),"\n",(0,o.jsx)(n.h3,{id:"step-3-implement-authentication-controller",children:"Step 3: Implement Authentication Controller"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'exports.googleAuth = async (req, res) => {\r\n  const { idToken } = req.body;\r\n  try {\r\n    const ticket = await client.verifyIdToken({\r\n      idToken: idToken,\r\n      audience: GOOGLE_CLIENT_ID,\r\n    });\r\n\r\n    const payload = ticket.getPayload();\r\n    let user = await Users.findOne({\r\n      where: { [Op.or]: [{ googleId: payload.sub }, { email: payload.email }] },\r\n    });\r\n\r\n    if (!user) {\r\n      user = await Users.create({\r\n        googleId: payload.sub,\r\n        email: payload.email,\r\n        name: payload.name,\r\n        username:\r\n          payload.name.replace(/\\s+/g, "_") +\r\n          "_" +\r\n          Math.floor(Date.now() / 1000),\r\n        profile_img: payload.picture,\r\n      });\r\n    }\r\n\r\n    const { user_id, name, username } = user;\r\n    const token = jwt.sign(\r\n      { user_id, name, email: user.email, username, session_id },\r\n      secret,\r\n      { expiresIn: "1d" }\r\n    );\r\n\r\n    return res.json({ message: "Login successful", token });\r\n  } catch (error) {\r\n    res.status(400).json({ error: "Invalid token" });\r\n  }\r\n};\n'})}),"\n",(0,o.jsx)(n.h2,{id:"how-it-works-overview",children:"How It Works: Overview"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Frontend Initiates Login"}),': The user clicks "Continue with Google," triggering the Google OAuth process.']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Google Authorization"}),": Google asks the user to grant your application access to their email and profile information."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Google Returns Tokens"}),": After a successful login, Google sends a token (usually an id_token) that represents the user's authenticated session."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Frontend Sends Token to Backend"}),": The frontend sends the id_token to your backend for verification."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Backend Verifies Token"}),": The backend uses Google's libraries to validate the id_token and extract user information securely."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Account Creation/Login"}),": Based on the id_token data, the backend creates a new user account or logs the user in."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Session Handling"}),": The backend creates a session (or generates a JWT) to maintain the user's login state."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"key-terms-and-their-roles",children:"Key Terms and Their Roles"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Client ID"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A unique identifier for your app, assigned by Google when you register your application in the Google Cloud Console."}),"\n",(0,o.jsx)(n.li,{children:"Purpose: Ensures the tokens issued by Google are valid for your app only."}),"\n",(0,o.jsx)(n.li,{children:'Example: "1234567890-abc123.apps.googleusercontent.com"'}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Client Secret"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A secret key associated with your app in Google Cloud."}),"\n",(0,o.jsx)(n.li,{children:"Purpose: Used for server-to-server communication (e.g., exchanging tokens), not required for frontend interactions."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Access Token"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A token issued by Google that allows your app to access Google APIs on behalf of the user."}),"\n",(0,o.jsx)(n.li,{children:"Example Use: Fetching additional user details or accessing Google services like Gmail or Drive."}),"\n",(0,o.jsx)(n.li,{children:"Not suitable for authentication (verifying a user's identity)."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"ID Token"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["A JWT (JSON Web Token) that contains claims about the authenticated user, such as:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"User's email"}),"\n",(0,o.jsx)(n.li,{children:"User's Google ID (sub)"}),"\n",(0,o.jsx)(n.li,{children:"Name and profile picture"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:"Purpose: Used to verify the user's identity."}),"\n",(0,o.jsxs)(n.li,{children:["Example Structure:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Header: Metadata about the token (e.g., signing algorithm)."}),"\n",(0,o.jsx)(n.li,{children:"Payload: User information (email, Google ID, etc.)."}),"\n",(0,o.jsx)(n.li,{children:"Signature: A cryptographic hash ensuring token integrity."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Google OAuth"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A secure protocol allowing apps to request access to user data without requiring passwords."}),"\n",(0,o.jsx)(n.li,{children:"Purpose: Allows apps to authenticate users and access their data (with permission)."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Google OAuth Scopes"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Define the level of access the app requests."}),"\n",(0,o.jsxs)(n.li,{children:["Example:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"email: Access the user's email address."}),"\n",(0,o.jsx)(n.li,{children:"profile: Access basic profile information like name and photo."}),"\n",(0,o.jsx)(n.li,{children:"openid: Grants permission to authenticate the user."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"JWT (JSON Web Token)"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A compact, URL-safe token format used for transferring information securely."}),"\n",(0,o.jsx)(n.li,{children:"Purpose: Used by your app to store session data in a stateless manner."}),"\n",(0,o.jsxs)(n.li,{children:["Contains three parts:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Header: Token metadata."}),"\n",(0,o.jsx)(n.li,{children:"Payload: Data like user ID, email, etc."}),"\n",(0,o.jsx)(n.li,{children:"Signature: Ensures token validity."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);