"use strict";(self.webpackChunkreadmes=self.webpackChunkreadmes||[]).push([[9181],{8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(6540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},9306:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Frontend/context-api","title":"React Context API - Complete Guide","description":"Step-by-step guide to React Context API with providers, consumers, custom hooks, and best practices for state management.","source":"@site/docs/Frontend/3.context-api.md","sourceDirName":"Frontend","slug":"/Frontend/context-api","permalink":"/docs/Frontend/context-api","draft":false,"unlisted":false,"editUrl":"https://github.com/Sandeep-Petwal/readmes/tree/main/packages/create-docusaurus/templates/shared/docs/Frontend/3.context-api.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"Context API","title":"React Context API - Complete Guide","description":"Step-by-step guide to React Context API with providers, consumers, custom hooks, and best practices for state management."},"sidebar":"tutorialSidebar","previous":{"title":"React Router","permalink":"/docs/Frontend/react-router-dom"},"next":{"title":"Redux Toolkit","permalink":"/docs/Frontend/redux-toolkit"}}');var o=n(4848),s=n(8453);const a={sidebar_label:"Context API",title:"React Context API - Complete Guide",description:"Step-by-step guide to React Context API with providers, consumers, custom hooks, and best practices for state management."},i="React Context API - Complete Guide",c={},l=[{value:"React Context API - Step by Step by Sandeep Prasad",id:"react-context-api---step-by-step-by-sandeep-prasad",level:2},{value:"Step 1. Create the Context",id:"step-1-create-the-context",level:3},{value:"Step 2. Create a Provider",id:"step-2-create-a-provider",level:3},{value:"Step 3. Wrap Your App with the Provider",id:"step-3-wrap-your-app-with-the-provider",level:3},{value:"Step 4. Consuming Context Data",id:"step-4-consuming-context-data",level:3},{value:"Step 5. Accessing Default Values (Optional)",id:"step-5-accessing-default-values-optional",level:3},{value:"Step 6. Creating a Custom Hook for Context (Optional)",id:"step-6-creating-a-custom-hook-for-context-optional",level:3},{value:"Recap:",id:"recap",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"react-context-api---complete-guide",children:"React Context API - Complete Guide"})}),"\n",(0,o.jsx)(t.p,{children:"A comprehensive guide to React Context API for state management, including providers, consumers, and custom hooks."}),"\n",(0,o.jsx)(t.h2,{id:"react-context-api---step-by-step-by-sandeep-prasad",children:"React Context API - Step by Step by Sandeep Prasad"}),"\n",(0,o.jsx)(t.h3,{id:"step-1-create-the-context",children:"Step 1. Create the Context"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"You can also set a default value in the context."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:'import { createContext } from "react";\r\n\r\n// Create the context\r\nexport const MyContext = createContext("default value");\n'})}),"\n",(0,o.jsx)(t.h3,{id:"step-2-create-a-provider",children:"Step 2. Create a Provider"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"The provider is responsible for passing data down to the components that need it."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:'// MyContextProvider.jsx\r\nimport { MyContext } from "./MyContext";\r\nimport { useState } from "react";\r\n\r\n// Create a provider component\r\nexport const MyContextProvider = ({ children }) => {\r\n  const [value, setValue] = useState("Initial Value");\r\n\r\n  return (\r\n    <MyContext.Provider value={{ value, setValue }}>\r\n      {children}\r\n    </MyContext.Provider>\r\n  );\r\n};\n'})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"you can use step 1 and 2 in single file"}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"step-3-wrap-your-app-with-the-provider",children:"Step 3. Wrap Your App with the Provider"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Wrap the root of your app or any component tree that needs access to the context."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:'// index.js\r\nimport ReactDOM from "react-dom/client";\r\nimport App from "./App.jsx";\r\nimport { MyContextProvider } from "./MyContextProvider";\r\n\r\nReactDOM.createRoot(document.getElementById("root")).render(\r\n  <MyContextProvider>\r\n    <App />\r\n  </MyContextProvider>\r\n);\n'})}),"\n",(0,o.jsx)(t.h3,{id:"step-4-consuming-context-data",children:"Step 4. Consuming Context Data"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Use ",(0,o.jsx)(t.code,{children:"useContext"})," in any child component to access the context values."]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:'// MyComponent.jsx\r\nimport { useContext } from "react";\r\nimport { MyContext } from "./MyContext";\r\n\r\nconst MyComponent = () => {\r\n  const { value, setValue } = useContext(MyContext);\r\n\r\n  const handleChange = () => {\r\n    setValue("New Value");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Current Value: {value}</p>\r\n      <button onClick={handleChange}>Change Value</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\n'})}),"\n",(0,o.jsx)(t.h3,{id:"step-5-accessing-default-values-optional",children:"Step 5. Accessing Default Values (Optional)"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["If a component is not wrapped in a provider, it will use the default value set in ",(0,o.jsx)(t.code,{children:"createContext"}),"."]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"const value = useContext(MyContext);\n"})}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h3,{id:"step-6-creating-a-custom-hook-for-context-optional",children:"Step 6. Creating a Custom Hook for Context (Optional)"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Instead of using useContext directly in your components, you can create a custom hook that wraps around it. This will make your context consumption more reusable and abstracted."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:'// useMyContext.jsx\r\nimport { useContext } from "react";\r\nimport { MyContext } from "./MyContext";\r\n\r\n// Custom hook for accessing MyContext\r\nexport const useMyContext = () => {\r\n  const context = useContext(MyContext);\r\n\r\n  // If the context is undefined, it means that the component is not wrapped with the provider.\r\n  if (!context) {\r\n    throw new Error("useMyContext must be used within a MyContextProvider");\r\n  }\r\n\r\n  return context;\r\n};\n'})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Now, instead of calling useContext(MyContext) directly in your components, you can use the  seMyContext hook."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:'// MyComponent.jsx\r\nimport { useMyContext } from "./useMyContext";\r\n\r\nconst MyComponent = () => {\r\n  const { value, setValue } = useMyContext();\r\n\r\n  const handleChange = () => {\r\n    setValue("New Value");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Current Value: {value}</p>\r\n      <button onClick={handleChange}>Change Value</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n};\n'})}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h3,{id:"recap",children:"Recap:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Create Context"})," with ",(0,o.jsx)(t.code,{children:"createContext()"})," and export it."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Create Provider"})," to pass down values and wrap the necessary part of your app."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Wrap Your App"})," with the Provider so components can access the context."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Consume Context"})," using ",(0,o.jsx)(t.code,{children:"useContext()"})," inside any component that needs it."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);